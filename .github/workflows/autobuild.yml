name: Automatic Builds

on: [workflow_dispatch]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Install wxWidgets and PortAudio
      run: |
        sudo apt-key adv --fetch-keys https://repos.codelite.org/CodeLite.asc 
        sudo apt-add-repository 'deb https://repos.codelite.org/wx3.1.4/ubuntu/ focal universe' 
        sudo apt update 
        sudo apt install libwxgtk3.1-dev portaudio19-dev -y
    - name: Checkout
      uses: actions/checkout@v1
    - name: Compile
      run: make -j$(nproc)
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: noods-linux
        path: noods

 
  build-windows:
    runs-on: windows-latest
    
    strategy:
      matrix:
        platform:
        - { arch: i686,   msystem: mingw32 }

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.platform.msystem}}
        update: true
    - name: Install build tools, wxWidgets, and PortAudio
      run: pacman -S mingw-w64-${{matrix.platform.arch}}-{gcc,pkg-config,wxWidgets,portaudio,jbigkit} make --noconfirm
      shell: msys2 {0}
    - name: Compile
      run: |
        make -j$(nproc)
        strip noods.exe
      shell: msys2 {0}
      working-directory: ${{ github.workspace }}
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: noods-windows-${{matrix.platform.arch}}
        path: noods.exe

  update-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

    steps:
    - name: Delete old release
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true
        tag_name: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Get artifacts
      uses: actions/download-artifact@v2
    - name: Package artifacts
      run: for i in ./*; do zip -r -j ${i}.zip $i; done
    - name: Create new release
      uses: ncipollo/release-action@v1
      with:
        name: Rolling Release
        body: These are automatically updated builds of the latest commit.
        artifacts: "*.zip"
        tag: release
        token: ${{ secrets.GITHUB_TOKEN }}
